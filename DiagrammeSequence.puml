@startuml

skinparam sequenceParticipant underline

actor Utilisateur
participant "fp : fenetreprincipale" as FP
participant "i : Interpreteur" as I
participant "cl : ConsructeurLitterale" as CL
participant "e1 : Entier" as E1
participant "e2 : Entier" as E2
participant "e3 : Entier" as E3
participant "p : Pile" as P


Utilisateur -> FP : getNextCommande()
activate FP

FP -> I: interpreter("3 6 *")
activate I

I -> I: execute("3")

I -> CL : distinguerConstruire("3")
activate CL

CL -> E1 : Entier("3")
activate E1

E1 -> I : lit

I -> P : push(lit)
activate P

deactivate P
deactivate CL

I -> I: execute("6")

I -> CL : distinguerConstruire("6")
activate CL

CL -> E2 : Entier("6")
activate E2

E2 -> I : lit

I -> P : push(lit)
activate P

deactivate P
deactivate CL

I -> I: executer("*")

participant "o : Operateur" as O

I -> O : inventaireOpArite2.contains("*")
activate O

O -> I : True
deactivate O

I -> P : end()
activate P

P -> I : i1

I -> P : end(1)

P -> I : i2
deactivate P

I -> O : inventaireOpArite2[*](i2, i1)
activate O

O -> O : OpMul(i2, i1)

O -> CL : distinguerConstruire("18")
deactivate O
activate CL

CL -> E3 : Entier("18")
activate E3

E3 -> I : resultat
deactivate CL

I -> P : pop()
activate P
deactivate E1
deactivate P
participant "it : Item" as IT

I -> IT : i1.supprimer()
activate IT
deactivate IT

I -> P : pop()
activate P
deactivate E2
deactivate P

I -> IT : i2.supprimer()
activate IT
deactivate IT

I -> P : push(resultat)
activate P
deactivate P

deactivate I
deactivate E3
deactivate FP

@enduml