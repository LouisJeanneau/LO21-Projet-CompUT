@startuml

package "GroupeLitterale" {
    Class Litterale{

    }

    Class ConstructeurLitterale{

    }

    Class Atome{

    }

    Class Expression{

    }

    Class Numerique{

    }

    Class Reel{

    }

    Class Rationel{

    }

    Class Entier{

    }

    Class Programme{

    }

}


Class Item{
    -lit : Litterale
    +obtenirLitterale() : Litterale&
}

Class Operateur{

}


Class Pile{
    -listeItems : Item*[]
    -CapaciteMax : size_t
    -NombreElements : size_t
    -AgrandissementCapacite() : void
    +pop() : Item&
    +push(item : Item) : void
    +estVide() : bool
    +taille() : size_t



}

Class Interpreter{
    -ChaineCommande : QString
    -OperandeActuel : QString
    -PointeurPile : Pile*
    +interprete(CommandeEntree : const QString&)
}

Class Controleur{
    -RefIntp : Interpreter&
    -RefPile : Pile&
    +Controleur(intp : Interpreter&, p : Pile&)
    +commande(c : const QString&)
    +setMessage(m : const QString&)
    +getMessage() : QString const
}

Class Persistance{

}

package "groupeAffichage" {

    Class Affichage{

    }

    Class Qt {

    }

}

Litterale <|-- Programme
Litterale <|-- Numerique
Litterale <|-- Expression
Litterale <|-- Atome
Numerique <|-- Reel
Numerique <|-- Rationel
Numerique <|-- Entier


ConstructeurLitterale *-- Litterale
Interpreter *-- Operateur
Interpreter *-- ConstructeurLitterale
Item *-- Litterale
Pile o-- Item
Pile <--> Interpreter
Controleur *--> Interpreter
Controleur *--> Pile
Controleur <-- Persistance
Controleur *--> Affichage
Affichage --> Qt

@enduml
